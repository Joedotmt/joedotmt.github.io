const urlsToCache = [
  './index.html',
  './coas/37.png',
  './coas/16.png',
  './coas/47.png',
  './coas/17.png',
  './coas/36.png',
  './coas/22.png',
  './coas/2.png',
  './coas/66.png',
  './coas/39.png',
  './coas/8.png',
  './coas/15.png',
  './coas/3.png',
  './coas/31.png',
  './coas/30.png',
  './coas/69.png',
  './coas/40.png',
  './coas/53.png',
  './coas/55.png',
  './coas/60.png',
  './coas/41.png',
  './coas/65.png',
  './coas/59.png',
  './coas/11.png',
  './coas/62.png',
  './coas/13.png',
  './coas/7.png',
  './coas/1.png',
  './coas/42.png',
  './coas/52.png',
  './coas/46.png',
  './coas/5.png',
  './coas/24.png',
  './coas/49.png',
  './coas/34.png',
  './coas/54.png',
  './coas/27.png',
  './coas/48.png',
  './coas/33.png',
  './coas/9.png',
  './coas/10.png',
  './coas/12.png',
  './coas/67.png',
  './coas/38.png',
  './coas/51.png',
  './coas/45.png',
  './coas/44.png',
  './coas/58.png',
  './coas/56.png',
  './coas/63.png',
  './coas/14.png',
  './coas/64.png',
  './coas/32.png',
  './coas/21.png',
  './coas/18.png',
  './coas/26.png',
  './coas/29.png',
  './coas/68.png',
  './coas/57.png',
  './coas/43.png',
  './coas/25.png',
  './coas/35.png',
  './coas/6.png',
  './coas/23.png',
  './coas/20.png',
  './coas/61.png',
  './coas/28.png',
  './coas/19.png',
  './coas/50.png',
  './coas/4.png',
  './app/app.js',
  './app/joe-logo.webp',
  './app/leaflet.css',
  './app/icon-512.png',
  './app/pangolin2.woff2',
  './app/shp.js',
  './app/app.webmanifest',
  './app/tailwind.js',
  './app/music.mp3',
  './app/musicoff.png',
  './app/Malta-LAU2.zip',
  './app/correct.mp3',
  './app/musicon.png',
  './app/pangolin1.woff2',
  './app/leaflet.js',
  './app/altnames.json',
  './app/321.mp3',
];
/*
const urlsToCache = [
  WILL BE GENERATED BY PYTHON
];
*/
const CACHE_NAME = 'my-pwa-cache-v1';

self.addEventListener('install', (event) => {
  event.waitUntil(
    caches.open(CACHE_NAME)
      .then((cache) => {
        console.log('Opened cache');
        return cache.addAll(urlsToCache);
      })
  );
});

self.addEventListener('fetch', (event) => {
  event.respondWith(
    caches.match(event.request)
      .then((response) => {
        if (response) {
          return response;
        }
        return fetch(event.request);
      })
  );
});